<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.numberone.emp.mapper.EmpAttenddayMapper">
  <resultMap id="BaseResultMap" type="empAttendday">
    <id column="attendday_id" jdbcType="VARCHAR" property="attenddayId" />
    <result column="user_id" jdbcType="INTEGER" javaType="long" property="userId" />
    <result column="emp_id" jdbcType="VARCHAR" property="empId" />
    <result column="attend_date" jdbcType="DATE" property="attendDate" />
    <result column="week" jdbcType="INTEGER" property="week" />
    <result column="first_time" jdbcType="TIMESTAMP" property="firstTime" />
    <result column="last_time" jdbcType="TIMESTAMP" property="lastTime" />
    <result column="attend_result" jdbcType="INTEGER" property="attendResult" />
    <result column="attend_type" jdbcType="INTEGER" property="attendType" />
    <result column="additional_time" jdbcType="DOUBLE" property="additionalTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <association property="dept"    column="dept_id" javaType="sysDept" resultMap="deptResult" />
    <association property="user"    column="user_id" javaType="sysUser" resultMap="userResult" />
  </resultMap>
  <resultMap id="deptResult" type="sysDept">
		<id     property="deptId"   column="dept_id"     />
		<result property="deptName" column="dept_name"   />
		<result property="orderNum" column="order_num"   />
	</resultMap>
	<resultMap id="userResult" type="sysUser" >
		<id     property="userId"       column="user_id"      />
		<id     property="empId"       column="emp_id"      />
		<result property="deptId"       column="dept_id"      />
		<result property="userName"     column="user_name"    />
		<result property="email"        column="email"        />
		<result property="birthday"        column="birthday"        />
		<result property="address"        column="address"        />
		<result property="officePhone"        column="office_phone"        />
		<result property="phonenumber"  column="phonenumber"  />
		<result property="sex"          column="sex"          />
	</resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    attendday_id, user_id, emp_id, attend_date, week, first_time, last_time, attend_result, 
    attend_type, additional_time, remark
  </sql>
  <select id="selectByExample" parameterType="empAttenddayExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from emp_attendday
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from emp_attendday
    where attendday_id = #{attenddayId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from emp_attendday
    where attendday_id = #{attenddayId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="empAttenddayExample">
    delete from emp_attendday
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="empAttendday">
    insert into emp_attendday (attendday_id, user_id, emp_id, 
      attend_date, week, first_time, 
      last_time, attend_result, attend_type, 
      additional_time, remark)
    values (#{attenddayId,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{empId,jdbcType=VARCHAR}, 
      #{attendDate,jdbcType=DATE}, #{week,jdbcType=INTEGER}, #{firstTime,jdbcType=TIMESTAMP}, 
      #{lastTime,jdbcType=TIMESTAMP}, #{attendResult,jdbcType=INTEGER}, #{attendType,jdbcType=INTEGER}, 
      #{additionalTime,jdbcType=DOUBLE}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="empAttendday">
    insert into emp_attendday
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="attenddayId != null">
        attendday_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="empId != null">
        emp_id,
      </if>
      <if test="attendDate != null">
        attend_date,
      </if>
      <if test="week != null">
        week,
      </if>
      <if test="firstTime != null">
        first_time,
      </if>
      <if test="lastTime != null">
        last_time,
      </if>
      <if test="attendResult != null">
        attend_result,
      </if>
      <if test="attendType != null">
        attend_type,
      </if>
      <if test="additionalTime != null">
        additional_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="attenddayId != null">
        #{attenddayId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="empId != null">
        #{empId,jdbcType=VARCHAR},
      </if>
      <if test="attendDate != null">
        #{attendDate,jdbcType=DATE},
      </if>
      <if test="week != null">
        #{week,jdbcType=INTEGER},
      </if>
      <if test="firstTime != null">
        #{firstTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attendResult != null">
        #{attendResult,jdbcType=INTEGER},
      </if>
      <if test="attendType != null">
        #{attendType,jdbcType=INTEGER},
      </if>
      <if test="additionalTime != null">
        #{additionalTime,jdbcType=DOUBLE},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="empAttenddayExample" resultType="java.lang.Integer">
    select count(*) from emp_attendday
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update emp_attendday
    <set>
      <if test="record.attenddayId != null">
        attendday_id = #{record.attenddayId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.empId != null">
        emp_id = #{record.empId,jdbcType=VARCHAR},
      </if>
      <if test="record.attendDate != null">
        attend_date = #{record.attendDate,jdbcType=DATE},
      </if>
      <if test="record.week != null">
        week = #{record.week,jdbcType=INTEGER},
      </if>
      <if test="record.firstTime != null">
        first_time = #{record.firstTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastTime != null">
        last_time = #{record.lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.attendResult != null">
        attend_result = #{record.attendResult,jdbcType=INTEGER},
      </if>
      <if test="record.attendType != null">
        attend_type = #{record.attendType,jdbcType=INTEGER},
      </if>
      <if test="record.additionalTime != null">
        additional_time = #{record.additionalTime,jdbcType=DOUBLE},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update emp_attendday
    set attendday_id = #{record.attenddayId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      emp_id = #{record.empId,jdbcType=VARCHAR},
      attend_date = #{record.attendDate,jdbcType=DATE},
      week = #{record.week,jdbcType=INTEGER},
      first_time = #{record.firstTime,jdbcType=TIMESTAMP},
      last_time = #{record.lastTime,jdbcType=TIMESTAMP},
      attend_result = #{record.attendResult,jdbcType=INTEGER},
      attend_type = #{record.attendType,jdbcType=INTEGER},
      additional_time = #{record.additionalTime,jdbcType=DOUBLE},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="empAttendday">
    update emp_attendday
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="empId != null">
        emp_id = #{empId,jdbcType=VARCHAR},
      </if>
      <if test="attendDate != null">
        attend_date = #{attendDate,jdbcType=DATE},
      </if>
      <if test="week != null">
        week = #{week,jdbcType=INTEGER},
      </if>
      <if test="firstTime != null">
        first_time = #{firstTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        last_time = #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attendResult != null">
        attend_result = #{attendResult,jdbcType=INTEGER},
      </if>
      <if test="attendType != null">
        attend_type = #{attendType,jdbcType=INTEGER},
      </if>
      <if test="additionalTime != null">
        additional_time = #{additionalTime,jdbcType=DOUBLE},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where attendday_id = #{attenddayId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="empAttendday">
    update emp_attendday
    set user_id = #{userId,jdbcType=INTEGER},
      emp_id = #{empId,jdbcType=VARCHAR},
      attend_date = #{attendDate,jdbcType=DATE},
      week = #{week,jdbcType=INTEGER},
      first_time = #{firstTime,jdbcType=TIMESTAMP},
      last_time = #{lastTime,jdbcType=TIMESTAMP},
      attend_result = #{attendResult,jdbcType=INTEGER},
      attend_type = #{attendType,jdbcType=INTEGER},
      additional_time = #{additionalTime,jdbcType=DOUBLE},
      remark = #{remark,jdbcType=VARCHAR}
    where attendday_id = #{attenddayId,jdbcType=VARCHAR}
  </update>
  <sql id="Base_sql1" >
    ad.attendday_id , ad.user_id , ad.emp_id , ad.attend_date , ad.week , ad.first_time, ad.last_time ,
    ad.attend_result , ad.attend_type, ad.additional_time, ad.remark, u.user_id, u.emp_id, 
    u.user_name, d.dept_id,d.parent_id, d.dept_name
  </sql>
  <!-- 查询日常出勤单，包含用户和部门信息 -->
  <select id="selectAttendDayList" parameterType="EmpAttendday" resultMap="BaseResultMap">
		select 
		<include refid="Base_sql1" />
		from emp_attendday AS ad
	    INNER JOIN sys_user AS u 
	        ON (ad.user_id = u.user_id)
	    INNER JOIN sys_dept AS d
	        ON (u.dept_id = d.dept_id)
		where 1=1 
		AND ad.user_id = #{userId}
		<if test="params.deptId != null and params.deptId != ''">
			AND d.dept_id like concat('%', #{params.deptId}, '%')
		</if>
		<if test="params.userName != null and params.userName != ''">
			AND u.user_name like concat('%', #{params.userName}, '%')
		</if>
		<if test="attendResult != null">
			AND ad.attend_result like = #{attendResult}
		</if>
		<if test="attendType != null and attendType != ''">
			AND ad.attend_type like = #{attendType}
		</if>
		<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
			AND date_format(ad.attend_date,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
		</if>
		<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
			AND date_format(ad.attend_date,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>
</mapper>