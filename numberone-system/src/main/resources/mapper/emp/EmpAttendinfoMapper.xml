<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.numberone.emp.mapper.EmpAttendinfoMapper">
  <resultMap id="BaseResultMap" type="empAttendinfo">
    <id column="attendinfo_id" jdbcType="VARCHAR" property="attendinfoId" />
    <result column="user_id"  jdbcType="INTEGER" javaType="long" property="userId" />
    <result column="emp_id" jdbcType="VARCHAR" property="empId" />
    <result column="attend_date" jdbcType="DATE" property="attendDate" />
    <result column="week" jdbcType="INTEGER" property="week" />
    <result column="record_time" jdbcType="TIMESTAMP" property="recordTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <association property="user"    column="user_id" javaType="SysUser" resultMap="SysUserResult" />
  </resultMap>
  
  <resultMap type="SysUser" id="SysUserResult">
		<id     property="userId"       column="user_id"      />
		<result property="userName"     column="user_name"    />
	</resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    attendinfo_id, user_id, emp_id, attend_date, week, record_time, remark
  </sql>
  <select id="selectByExample" parameterType="empAttendinfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from emp_attendinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from emp_attendinfo
    where attendinfo_id = #{attendinfoId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from emp_attendinfo
    where attendinfo_id = #{attendinfoId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="empAttendinfoExample">
    delete from emp_attendinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="empAttendinfo">
    insert into emp_attendinfo (attendinfo_id, user_id, emp_id, 
      attend_date, week, record_time, 
      remark)
    values (#{attendinfoId,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{empId,jdbcType=VARCHAR}, 
      #{attendDate,jdbcType=DATE}, #{week,jdbcType=INTEGER}, #{recordTime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="empAttendinfo">
    insert into emp_attendinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="attendinfoId != null">
        attendinfo_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="empId != null">
        emp_id,
      </if>
      <if test="attendDate != null">
        attend_date,
      </if>
      <if test="week != null">
        week,
      </if>
      <if test="recordTime != null">
        record_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="attendinfoId != null">
        #{attendinfoId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="empId != null">
        #{empId,jdbcType=VARCHAR},
      </if>
      <if test="attendDate != null">
        #{attendDate,jdbcType=DATE},
      </if>
      <if test="week != null">
        #{week,jdbcType=INTEGER},
      </if>
      <if test="recordTime != null">
        #{recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="empAttendinfoExample" resultType="java.lang.Integer">
    select count(*) from emp_attendinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update emp_attendinfo
    <set>
      <if test="record.attendinfoId != null">
        attendinfo_id = #{record.attendinfoId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.empId != null">
        emp_id = #{record.empId,jdbcType=VARCHAR},
      </if>
      <if test="record.attendDate != null">
        attend_date = #{record.attendDate,jdbcType=DATE},
      </if>
      <if test="record.week != null">
        week = #{record.week,jdbcType=INTEGER},
      </if>
      <if test="record.recordTime != null">
        record_time = #{record.recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update emp_attendinfo
    set attendinfo_id = #{record.attendinfoId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      emp_id = #{record.empId,jdbcType=VARCHAR},
      attend_date = #{record.attendDate,jdbcType=DATE},
      week = #{record.week,jdbcType=INTEGER},
      record_time = #{record.recordTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="empAttendinfo">
    update emp_attendinfo
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="empId != null">
        emp_id = #{empId,jdbcType=VARCHAR},
      </if>
      <if test="attendDate != null">
        attend_date = #{attendDate,jdbcType=DATE},
      </if>
      <if test="week != null">
        week = #{week,jdbcType=INTEGER},
      </if>
      <if test="recordTime != null">
        record_time = #{recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where attendinfo_id = #{attendinfoId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="empAttendinfo">
    update emp_attendinfo
    set user_id = #{userId,jdbcType=INTEGER},
      emp_id = #{empId,jdbcType=VARCHAR},
      attend_date = #{attendDate,jdbcType=DATE},
      week = #{week,jdbcType=INTEGER},
      record_time = #{recordTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where attendinfo_id = #{attendinfoId,jdbcType=VARCHAR}
  </update>
	<select id="selectAttendinfoList" resultMap="BaseResultMap">
		select ai.attendinfo_id , ai.user_id , ai.emp_id , ai.attend_date , ai.week , ai.record_time , ai.remark , u.user_name , u.user_name 
		FROM emp_attendinfo AS ai INNER JOIN sys_user AS u ON (ai.user_id = u.user_id) 
		where  ai.user_id = #{user_id}
	</select>
</mapper>